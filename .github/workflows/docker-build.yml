name: Build and Push Docker Image

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'LICENSE'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DOCKER_BUILDKIT: 1

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # for creating tags
      packages: write  # for pushing to ghcr.io
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true  # Ensure Buildx is installed

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate version
        id: version
        run: |
          # Get latest tag
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          
          # Increment patch version
          IFS='.' read -r -a version_parts <<< "${latest_tag#v}"
          new_patch=$((${version_parts[2]} + 1))
          new_version="${version_parts[0]}.${version_parts[1]}.$new_patch"
          
          echo "New version: v$new_version"
          echo "new_version=$new_version" >> $GITHUB_OUTPUT
          
          # Create and push new tag
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a "v$new_version" -m "Release v$new_version"
          git push origin "v$new_version"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: type=gha,mode=max
          cache-to: type=gha,mode=max
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:v${{ steps.version.outputs.new_version }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.created=${{ github.event.workflow_run.created_at }}
            org.opencontainers.image.revision=${{ github.sha }}
          build-args: |
            DOCKER_BUILDKIT=1
          outputs: type=image  # Use 'image' instead of 'docker'
          load: false  # Prevent loading the image locally, as it's being pushed directly

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          if [ -d /tmp/.buildx-cache-new ]; then
            mv /tmp/.buildx-cache-new /tmp/.buildx-cache
          fi
